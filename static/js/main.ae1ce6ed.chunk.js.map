{"version":3,"sources":["components/header1.js","components/header2.js","components/mains.js","components/utils.js","App.js","serviceWorker.js","index.js"],"names":["Header1","className","href","Header2","MainContent","useState","source","pickUpFrom","deliveryTo","yourName","phoneNo","emailId","truckType","deliveryDetails","setdeliveryDetails","id","style","borderRadius","fontWeight","onChange","e","target","value","disabled","selected","type","placeholder","onClick","fetch","method","headers","body","JSON","stringify","then","result","json","resp","console","warn","insert_DeliveryDetails","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae1ce6ed.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport { BsChevronLeft } from \"react-icons/bs\"\r\n\r\nconst Header1 = () => {\r\n\r\n    return (\r\n        <section className=\"firstheader\">\r\n            <div className=\"container ffghj\">\r\n                <div className=\"row ddd\">\r\n                    <div className=\"col-2 gghy\"><a href=\"#\"><div className=\"uoop\"><div><h4><BsChevronLeft /></h4></div><div className=\"foops\">Back</div></div></a> </div>\r\n                    <div className=\"col-8 ggh\"><h4>Welcome</h4></div>\r\n                    <div className=\"col-2\">  </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Header1;","import React from 'react';\r\nimport '../App.css';\r\nimport { BsFillQuestionCircleFill } from \"react-icons/bs\"\r\n\r\nconst Header2 = () => {\r\n\r\n    return (\r\n        <section className=\"secondheader\">\r\n            <div className=\"container secondcontainer\">\r\n                <div >   <h3> <BsFillQuestionCircleFill /> </h3></div>\r\n                <div className=\"ggghhh\">\r\n                    <h4> SERVICE RELATED QUESTION</h4>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Header2;","import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport { insert_DeliveryDetails } from './utils';\r\nimport { IoMdPin } from \"react-icons/io\";\r\n\r\n\r\nconst MainContent = () => {\r\n\r\n  const [deliveryDetails, setdeliveryDetails] = useState({\r\n    source: '',\r\n    pickUpFrom: '',\r\n    deliveryTo: '',\r\n    yourName: '',\r\n    phoneNo: '',\r\n    emailId: '',\r\n    truckType: '',\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <section className=\"thirdsection\">\r\n        <div className=\"container mt-3 thirdcontainer\">\r\n          <h4>From Where You Get About Trucker</h4>\r\n          <div className=\"gty\">\r\n            <div className=\"input-group mb-3  \" id=\"abb\">\r\n              <select  style={{ borderRadius: \"45px 45px 45px 45px\", fontWeight: \"bold\" }}\r\n                onChange={(e) => { setdeliveryDetails({ ...deliveryDetails, source: e.target.value }) }} value={deliveryDetails.source} >\r\n                <option value=\"\" disabled selected>Select Source</option>\r\n                <option value=\"users\" >Users</option>\r\n                <option value=\"advertisements\">Advertisements</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <h4>Fill The Delivery Details</h4>\r\n          <div className=\"fgtu\">\r\n            <div className=\"input-group mb-3\">\r\n              <input type=\"text\" className=\"form-control thirdsectiontext1\" placeholder=\"Pickup From\" style={{ borderRadius: \"45px 0px 0px 45px\" }}\r\n                onChange={(e) => { setdeliveryDetails({ ...deliveryDetails, pickUpFrom: e.target.value }) }}   value={deliveryDetails.pickUpFrom} />\r\n              <div className=\"input-group-append\">\r\n                <span className=\"input-group-text  gghh\" style={{ borderRadius: \"0px 45px 45px 0px\" }}><a href=\"\"><div className=\"lloop\"><IoMdPin /></div></a></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"fgtu\">\r\n            <div className=\"input-group mb-3\">\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Delivery To\" style={{ borderRadius: \"45px 0px 0px 45px\" }}\r\n                onChange={(e) => { setdeliveryDetails({ ...deliveryDetails, deliveryTo: e.target.value }) }} value={deliveryDetails.deliveryTo} />\r\n              <div className=\"input-group-append\">\r\n                <span className=\"input-group-text gghh\" style={{ borderRadius: \"0px 45px 45px 0px\" }}><a href=\"\"><div className=\"lloop\"><IoMdPin /></div></a></span>\r\n              </div>\r\n            </div>\r\n          </div >\r\n          <div className=\"fgtu\">\r\n            <div className=\"input-group mb-3\">\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" style={{ borderRadius: \"45px 45px 45px 45px\" }}\r\n                onChange={(e) => { setdeliveryDetails({ ...deliveryDetails, yourName: e.target.value }) }} value={deliveryDetails.yourName} />\r\n            </div>\r\n          </div>\r\n          <div className=\"fgtu\">\r\n            <div className=\"input-group mb-3\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" style={{ borderRadius: \"45px 0px 0px 45px\" }}>+966</span>\r\n              </div>\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Your Phone No.\" style={{ borderRadius: \"0px 45px 45px 0px\" }}\r\n                onChange={(e) => { setdeliveryDetails({ ...deliveryDetails, phoneNo: e.target.value }) }} value={deliveryDetails.phoneNo} />\r\n            </div>\r\n          </div>\r\n          <div className=\"fgtu\">\r\n            <div className=\"input-group mb-3\">\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Your Email Id\" style={{ borderRadius: \"45px 45px 45px 45px\" }}\r\n                onChange={(e) => { setdeliveryDetails({ ...deliveryDetails, emailId: e.target.value }) }} value={deliveryDetails.emailId} />\r\n            </div>\r\n          </div>\r\n          <div className=\"fgtu\">\r\n            <div className=\"input-group mb-3  \" id=\"abb\">\r\n              <select className=\"form-control1\" style={{ borderRadius: \"45px 45px 45px 45px\", fontWeight: \"bold\" }}\r\n                onChange={(e) => { setdeliveryDetails({ ...deliveryDetails, truckType: e.target.value }) }} value={deliveryDetails.truckType}>\r\n                <option value=\"\" disabled selected>Select Truck Type</option>\r\n                <option value=\"good\">Good</option>\r\n                <option value=\"bad\">Bad</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"distclass\">Distance    00.0  km</div>\r\n          <div className=\"thirdanchor\">\r\n            <div className=\"thirdanchors\" onClick={() => { insert_DeliveryDetails(deliveryDetails, setdeliveryDetails) }}   > <a href=\"#\" >Submit</a></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"seemore24\"><a href=\"\" className=\"seemore\">See More</a></div>\r\n      </section>\r\n      <section className=\"nexted\"></section>\r\n      <section className=\"nexted2\"><div className=\"nexted2div\"></div></section>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default MainContent;","\r\nexport const insert_DeliveryDetails = (deliveryDetails, setdeliveryDetails) => {\r\n\r\n  deliveryDetails.phoneNo = '+966' + deliveryDetails.phoneNo;\r\n\r\n  let url = \"https://zinfogapi.herokuapp.com/about/\t\";\r\n\r\n  fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(deliveryDetails)\r\n  }).then((result) => {\r\n    result.json().then((resp) => {\r\n      console.warn(\"resp\", resp)\r\n\r\n      setdeliveryDetails({\r\n        source: '',\r\n        pickUpFrom: '',\r\n        deliveryTo: '',\r\n        yourName: '',\r\n        phoneNo: '',\r\n        emailId: '',\r\n        truckType: '',\r\n      });\r\n\r\n    })\r\n\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport Header1 from './components/header1';\nimport Header2 from './components/header2';\nimport MainContent from './components/mains';\n\n\nfunction App() {\n  return (\n\n <div>\n\n   <Header1/>\n   <Header2/>\n   <MainContent/>\n   \n </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}